import 'dart:io';

import 'package:path_provider/path_provider.dart';
import 'package:vocechat_client/api/lib/resource_api.dart';
import 'package:vocechat_client/app.dart';
import 'package:vocechat_client/services/file_handler/voce_file_handler.dart';

class ChannelAvatarHander extends VoceFileHander {
  static const String _pathStr = "channel_avatar";

  /// Constructor
  ///
  /// File name should be generated by [generateFileName],
  /// format: gid.png
  ChannelAvatarHander() : super();

  /// Should insert a png file.
  @override
  Future<String> filePath(String fileName) async {
    final directory = await getApplicationDocumentsDirectory();
    try {
      return "${directory.path}/file/${App.app.userDb!.dbName}/$_pathStr/$fileName";
    } catch (e) {
      App.logger.severe(e);
      return "${directory.path}/file";
    }
  }

  static String generateFileName(int gid) {
    return "$gid.png";
  }

  /// Read file from local storage, if not exist, fetch from server.
  Future<File?> readOrFetch(int gid) async {
    final fileName = generateFileName(gid);
    final file = await read(fileName);
    if (file != null) {
      return file;
    } else {
      try {
        final resourceApi = ResourceApi();
        final res = await resourceApi.getGroupAvatar(gid);
        if (res != null &&
            res.statusCode == 200 &&
            res.data != null &&
            res.data!.isNotEmpty) {
          return ChannelAvatarHander()
              .save(ChannelAvatarHander.generateFileName(gid), res.data!);
        }
      } catch (e) {
        App.logger.warning(e);
      }
    }
    return null;
  }
}
